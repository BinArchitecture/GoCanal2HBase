// Code generated by protoc-gen-go. DO NOT EDIT.
// source: CanalProtocol.proto

/*
Package com_alibaba_otter_canal_protocol is a generated protocol buffer package.

It is generated from these files:
	CanalProtocol.proto

It has these top-level messages:
	Packet
	HeartBeat
	Handshake
	ClientAuth
	Ack
	ClientAck
	Sub
	Unsub
	Get
	Messages
	Dump
	ClientRollback
*/
package com_alibaba_otter_canal_protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Compression int32

const (
	Compression_NONE Compression = 1
	Compression_ZLIB Compression = 2
	Compression_GZIP Compression = 3
	Compression_LZF  Compression = 4
)

var Compression_name = map[int32]string{
	1: "NONE",
	2: "ZLIB",
	3: "GZIP",
	4: "LZF",
}
var Compression_value = map[string]int32{
	"NONE": 1,
	"ZLIB": 2,
	"GZIP": 3,
	"LZF":  4,
}

func (x Compression) Enum() *Compression {
	p := new(Compression)
	*p = x
	return p
}
func (x Compression) String() string {
	return proto.EnumName(Compression_name, int32(x))
}
func (x *Compression) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Compression_value, data, "Compression")
	if err != nil {
		return err
	}
	*x = Compression(value)
	return nil
}
func (Compression) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PacketType int32

const (
	PacketType_HANDSHAKE            PacketType = 1
	PacketType_CLIENTAUTHENTICATION PacketType = 2
	PacketType_ACK                  PacketType = 3
	PacketType_SUBSCRIPTION         PacketType = 4
	PacketType_UNSUBSCRIPTION       PacketType = 5
	PacketType_GET                  PacketType = 6
	PacketType_MESSAGES             PacketType = 7
	PacketType_CLIENTACK            PacketType = 8
	// management part
	PacketType_SHUTDOWN PacketType = 9
	// integration
	PacketType_DUMP           PacketType = 10
	PacketType_HEARTBEAT      PacketType = 11
	PacketType_CLIENTROLLBACK PacketType = 12
)

var PacketType_name = map[int32]string{
	1:  "HANDSHAKE",
	2:  "CLIENTAUTHENTICATION",
	3:  "ACK",
	4:  "SUBSCRIPTION",
	5:  "UNSUBSCRIPTION",
	6:  "GET",
	7:  "MESSAGES",
	8:  "CLIENTACK",
	9:  "SHUTDOWN",
	10: "DUMP",
	11: "HEARTBEAT",
	12: "CLIENTROLLBACK",
}
var PacketType_value = map[string]int32{
	"HANDSHAKE":            1,
	"CLIENTAUTHENTICATION": 2,
	"ACK":            3,
	"SUBSCRIPTION":   4,
	"UNSUBSCRIPTION": 5,
	"GET":            6,
	"MESSAGES":       7,
	"CLIENTACK":      8,
	"SHUTDOWN":       9,
	"DUMP":           10,
	"HEARTBEAT":      11,
	"CLIENTROLLBACK": 12,
}

func (x PacketType) Enum() *PacketType {
	p := new(PacketType)
	*p = x
	return p
}
func (x PacketType) String() string {
	return proto.EnumName(PacketType_name, int32(x))
}
func (x *PacketType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PacketType_value, data, "PacketType")
	if err != nil {
		return err
	}
	*x = PacketType(value)
	return nil
}
func (PacketType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Packet struct {
	MagicNumber      *int32       `protobuf:"varint,1,opt,name=magic_number,def=17" json:"magic_number,omitempty"`
	Version          *int32       `protobuf:"varint,2,opt,name=version,def=1" json:"version,omitempty"`
	Type             *PacketType  `protobuf:"varint,3,opt,name=type,enum=com.alibaba.otter.canal.protocol.PacketType" json:"type,omitempty"`
	Compression      *Compression `protobuf:"varint,4,opt,name=compression,enum=com.alibaba.otter.canal.protocol.Compression,def=1" json:"compression,omitempty"`
	Body             []byte       `protobuf:"bytes,5,opt,name=body" json:"body,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Packet) Reset()                    { *m = Packet{} }
func (m *Packet) String() string            { return proto.CompactTextString(m) }
func (*Packet) ProtoMessage()               {}
func (*Packet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

const Default_Packet_MagicNumber int32 = 17
const Default_Packet_Version int32 = 1
const Default_Packet_Compression Compression = Compression_NONE

func (m *Packet) GetMagicNumber() int32 {
	if m != nil && m.MagicNumber != nil {
		return *m.MagicNumber
	}
	return Default_Packet_MagicNumber
}

func (m *Packet) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return Default_Packet_Version
}

func (m *Packet) GetType() PacketType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return PacketType_HANDSHAKE
}

func (m *Packet) GetCompression() Compression {
	if m != nil && m.Compression != nil {
		return *m.Compression
	}
	return Default_Packet_Compression
}

func (m *Packet) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type HeartBeat struct {
	SendTimestamp    *int64 `protobuf:"varint,1,opt,name=send_timestamp" json:"send_timestamp,omitempty"`
	StartTimestamp   *int64 `protobuf:"varint,2,opt,name=start_timestamp" json:"start_timestamp,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *HeartBeat) Reset()                    { *m = HeartBeat{} }
func (m *HeartBeat) String() string            { return proto.CompactTextString(m) }
func (*HeartBeat) ProtoMessage()               {}
func (*HeartBeat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HeartBeat) GetSendTimestamp() int64 {
	if m != nil && m.SendTimestamp != nil {
		return *m.SendTimestamp
	}
	return 0
}

func (m *HeartBeat) GetStartTimestamp() int64 {
	if m != nil && m.StartTimestamp != nil {
		return *m.StartTimestamp
	}
	return 0
}

type Handshake struct {
	CommunicationEncoding *string       `protobuf:"bytes,1,opt,name=communication_encoding,def=utf8" json:"communication_encoding,omitempty"`
	Seeds                 []byte        `protobuf:"bytes,2,opt,name=seeds" json:"seeds,omitempty"`
	SupportedCompressions []Compression `protobuf:"varint,3,rep,name=supported_compressions,enum=com.alibaba.otter.canal.protocol.Compression" json:"supported_compressions,omitempty"`
	XXX_unrecognized      []byte        `json:"-"`
}

func (m *Handshake) Reset()                    { *m = Handshake{} }
func (m *Handshake) String() string            { return proto.CompactTextString(m) }
func (*Handshake) ProtoMessage()               {}
func (*Handshake) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

const Default_Handshake_CommunicationEncoding string = "utf8"

func (m *Handshake) GetCommunicationEncoding() string {
	if m != nil && m.CommunicationEncoding != nil {
		return *m.CommunicationEncoding
	}
	return Default_Handshake_CommunicationEncoding
}

func (m *Handshake) GetSeeds() []byte {
	if m != nil {
		return m.Seeds
	}
	return nil
}

func (m *Handshake) GetSupportedCompressions() []Compression {
	if m != nil {
		return m.SupportedCompressions
	}
	return nil
}

// client authentication
type ClientAuth struct {
	Username         *string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password         []byte  `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	NetReadTimeout   *int32  `protobuf:"varint,3,opt,name=net_read_timeout,def=0" json:"net_read_timeout,omitempty"`
	NetWriteTimeout  *int32  `protobuf:"varint,4,opt,name=net_write_timeout,def=0" json:"net_write_timeout,omitempty"`
	Destination      *string `protobuf:"bytes,5,opt,name=destination" json:"destination,omitempty"`
	ClientId         *string `protobuf:"bytes,6,opt,name=client_id" json:"client_id,omitempty"`
	Filter           *string `protobuf:"bytes,7,opt,name=filter" json:"filter,omitempty"`
	StartTimestamp   *int64  `protobuf:"varint,8,opt,name=start_timestamp" json:"start_timestamp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ClientAuth) Reset()                    { *m = ClientAuth{} }
func (m *ClientAuth) String() string            { return proto.CompactTextString(m) }
func (*ClientAuth) ProtoMessage()               {}
func (*ClientAuth) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

const Default_ClientAuth_NetReadTimeout int32 = 0
const Default_ClientAuth_NetWriteTimeout int32 = 0

func (m *ClientAuth) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *ClientAuth) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *ClientAuth) GetNetReadTimeout() int32 {
	if m != nil && m.NetReadTimeout != nil {
		return *m.NetReadTimeout
	}
	return Default_ClientAuth_NetReadTimeout
}

func (m *ClientAuth) GetNetWriteTimeout() int32 {
	if m != nil && m.NetWriteTimeout != nil {
		return *m.NetWriteTimeout
	}
	return Default_ClientAuth_NetWriteTimeout
}

func (m *ClientAuth) GetDestination() string {
	if m != nil && m.Destination != nil {
		return *m.Destination
	}
	return ""
}

func (m *ClientAuth) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *ClientAuth) GetFilter() string {
	if m != nil && m.Filter != nil {
		return *m.Filter
	}
	return ""
}

func (m *ClientAuth) GetStartTimestamp() int64 {
	if m != nil && m.StartTimestamp != nil {
		return *m.StartTimestamp
	}
	return 0
}

type Ack struct {
	ErrorCode        *int32  `protobuf:"varint,1,opt,name=error_code,def=0" json:"error_code,omitempty"`
	ErrorMessage     *string `protobuf:"bytes,2,opt,name=error_message" json:"error_message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Ack) Reset()                    { *m = Ack{} }
func (m *Ack) String() string            { return proto.CompactTextString(m) }
func (*Ack) ProtoMessage()               {}
func (*Ack) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

const Default_Ack_ErrorCode int32 = 0

func (m *Ack) GetErrorCode() int32 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return Default_Ack_ErrorCode
}

func (m *Ack) GetErrorMessage() string {
	if m != nil && m.ErrorMessage != nil {
		return *m.ErrorMessage
	}
	return ""
}

type ClientAck struct {
	Destination      *string `protobuf:"bytes,1,opt,name=destination" json:"destination,omitempty"`
	ClientId         *string `protobuf:"bytes,2,opt,name=client_id" json:"client_id,omitempty"`
	BatchId          *int64  `protobuf:"varint,3,opt,name=batch_id" json:"batch_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ClientAck) Reset()                    { *m = ClientAck{} }
func (m *ClientAck) String() string            { return proto.CompactTextString(m) }
func (*ClientAck) ProtoMessage()               {}
func (*ClientAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ClientAck) GetDestination() string {
	if m != nil && m.Destination != nil {
		return *m.Destination
	}
	return ""
}

func (m *ClientAck) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *ClientAck) GetBatchId() int64 {
	if m != nil && m.BatchId != nil {
		return *m.BatchId
	}
	return 0
}

// subscription
type Sub struct {
	Destination      *string `protobuf:"bytes,1,opt,name=destination" json:"destination,omitempty"`
	ClientId         *string `protobuf:"bytes,2,opt,name=client_id" json:"client_id,omitempty"`
	Filter           *string `protobuf:"bytes,7,opt,name=filter" json:"filter,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Sub) Reset()                    { *m = Sub{} }
func (m *Sub) String() string            { return proto.CompactTextString(m) }
func (*Sub) ProtoMessage()               {}
func (*Sub) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Sub) GetDestination() string {
	if m != nil && m.Destination != nil {
		return *m.Destination
	}
	return ""
}

func (m *Sub) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *Sub) GetFilter() string {
	if m != nil && m.Filter != nil {
		return *m.Filter
	}
	return ""
}

// Unsubscription
type Unsub struct {
	Destination      *string `protobuf:"bytes,1,opt,name=destination" json:"destination,omitempty"`
	ClientId         *string `protobuf:"bytes,2,opt,name=client_id" json:"client_id,omitempty"`
	Filter           *string `protobuf:"bytes,7,opt,name=filter" json:"filter,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Unsub) Reset()                    { *m = Unsub{} }
func (m *Unsub) String() string            { return proto.CompactTextString(m) }
func (*Unsub) ProtoMessage()               {}
func (*Unsub) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Unsub) GetDestination() string {
	if m != nil && m.Destination != nil {
		return *m.Destination
	}
	return ""
}

func (m *Unsub) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *Unsub) GetFilter() string {
	if m != nil && m.Filter != nil {
		return *m.Filter
	}
	return ""
}

//  PullRequest
type Get struct {
	Destination      *string `protobuf:"bytes,1,opt,name=destination" json:"destination,omitempty"`
	ClientId         *string `protobuf:"bytes,2,opt,name=client_id" json:"client_id,omitempty"`
	FetchSize        *int32  `protobuf:"varint,3,opt,name=fetch_size" json:"fetch_size,omitempty"`
	Timeout          *int64  `protobuf:"varint,4,opt,name=timeout,def=-1" json:"timeout,omitempty"`
	Unit             *int32  `protobuf:"varint,5,opt,name=unit,def=2" json:"unit,omitempty"`
	AutoAck          *bool   `protobuf:"varint,6,opt,name=auto_ack,def=0" json:"auto_ack,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Get) Reset()                    { *m = Get{} }
func (m *Get) String() string            { return proto.CompactTextString(m) }
func (*Get) ProtoMessage()               {}
func (*Get) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

const Default_Get_Timeout int64 = -1
const Default_Get_Unit int32 = 2
const Default_Get_AutoAck bool = false

func (m *Get) GetDestination() string {
	if m != nil && m.Destination != nil {
		return *m.Destination
	}
	return ""
}

func (m *Get) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *Get) GetFetchSize() int32 {
	if m != nil && m.FetchSize != nil {
		return *m.FetchSize
	}
	return 0
}

func (m *Get) GetTimeout() int64 {
	if m != nil && m.Timeout != nil {
		return *m.Timeout
	}
	return Default_Get_Timeout
}

func (m *Get) GetUnit() int32 {
	if m != nil && m.Unit != nil {
		return *m.Unit
	}
	return Default_Get_Unit
}

func (m *Get) GetAutoAck() bool {
	if m != nil && m.AutoAck != nil {
		return *m.AutoAck
	}
	return Default_Get_AutoAck
}

//
type Messages struct {
	BatchId          *int64   `protobuf:"varint,1,opt,name=batch_id" json:"batch_id,omitempty"`
	Messages         [][]byte `protobuf:"bytes,2,rep,name=messages" json:"messages,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Messages) Reset()                    { *m = Messages{} }
func (m *Messages) String() string            { return proto.CompactTextString(m) }
func (*Messages) ProtoMessage()               {}
func (*Messages) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Messages) GetBatchId() int64 {
	if m != nil && m.BatchId != nil {
		return *m.BatchId
	}
	return 0
}

func (m *Messages) GetMessages() [][]byte {
	if m != nil {
		return m.Messages
	}
	return nil
}

// TBD when new packets are required
type Dump struct {
	Journal          *string `protobuf:"bytes,1,opt,name=journal" json:"journal,omitempty"`
	Position         *int64  `protobuf:"varint,2,opt,name=position" json:"position,omitempty"`
	Timestamp        *int64  `protobuf:"varint,3,opt,name=timestamp,def=0" json:"timestamp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Dump) Reset()                    { *m = Dump{} }
func (m *Dump) String() string            { return proto.CompactTextString(m) }
func (*Dump) ProtoMessage()               {}
func (*Dump) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

const Default_Dump_Timestamp int64 = 0

func (m *Dump) GetJournal() string {
	if m != nil && m.Journal != nil {
		return *m.Journal
	}
	return ""
}

func (m *Dump) GetPosition() int64 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

func (m *Dump) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return Default_Dump_Timestamp
}

type ClientRollback struct {
	Destination      *string `protobuf:"bytes,1,opt,name=destination" json:"destination,omitempty"`
	ClientId         *string `protobuf:"bytes,2,opt,name=client_id" json:"client_id,omitempty"`
	BatchId          *int64  `protobuf:"varint,3,opt,name=batch_id" json:"batch_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ClientRollback) Reset()                    { *m = ClientRollback{} }
func (m *ClientRollback) String() string            { return proto.CompactTextString(m) }
func (*ClientRollback) ProtoMessage()               {}
func (*ClientRollback) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ClientRollback) GetDestination() string {
	if m != nil && m.Destination != nil {
		return *m.Destination
	}
	return ""
}

func (m *ClientRollback) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *ClientRollback) GetBatchId() int64 {
	if m != nil && m.BatchId != nil {
		return *m.BatchId
	}
	return 0
}

func init() {
	proto.RegisterType((*Packet)(nil), "com.alibaba.otter.canal.protocol.Packet")
	proto.RegisterType((*HeartBeat)(nil), "com.alibaba.otter.canal.protocol.HeartBeat")
	proto.RegisterType((*Handshake)(nil), "com.alibaba.otter.canal.protocol.Handshake")
	proto.RegisterType((*ClientAuth)(nil), "com.alibaba.otter.canal.protocol.ClientAuth")
	proto.RegisterType((*Ack)(nil), "com.alibaba.otter.canal.protocol.Ack")
	proto.RegisterType((*ClientAck)(nil), "com.alibaba.otter.canal.protocol.ClientAck")
	proto.RegisterType((*Sub)(nil), "com.alibaba.otter.canal.protocol.Sub")
	proto.RegisterType((*Unsub)(nil), "com.alibaba.otter.canal.protocol.Unsub")
	proto.RegisterType((*Get)(nil), "com.alibaba.otter.canal.protocol.Get")
	proto.RegisterType((*Messages)(nil), "com.alibaba.otter.canal.protocol.Messages")
	proto.RegisterType((*Dump)(nil), "com.alibaba.otter.canal.protocol.Dump")
	proto.RegisterType((*ClientRollback)(nil), "com.alibaba.otter.canal.protocol.ClientRollback")
	proto.RegisterEnum("com.alibaba.otter.canal.protocol.Compression", Compression_name, Compression_value)
	proto.RegisterEnum("com.alibaba.otter.canal.protocol.PacketType", PacketType_name, PacketType_value)
}

func init() { proto.RegisterFile("CanalProtocol.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 797 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x54, 0xc1, 0x6e, 0xdb, 0x46,
	0x10, 0xc5, 0x8a, 0xa4, 0x45, 0x8e, 0x14, 0x99, 0x59, 0x27, 0x0e, 0x81, 0xf6, 0x20, 0x10, 0x3d,
	0x18, 0x41, 0x23, 0xd8, 0x69, 0x81, 0x16, 0x44, 0x8b, 0x80, 0x92, 0x59, 0x4b, 0xb5, 0x2c, 0x0b,
	0x16, 0x85, 0x02, 0xbe, 0x08, 0x2b, 0x72, 0x6d, 0xb3, 0x22, 0xb9, 0xc4, 0xee, 0xb2, 0x81, 0x7b,
	0xea, 0x1f, 0xf4, 0x87, 0x7a, 0xed, 0xa5, 0x5f, 0x55, 0xec, 0x52, 0x6e, 0x94, 0xb4, 0x80, 0x53,
	0xe4, 0xb6, 0x9c, 0xe1, 0xbc, 0x99, 0xf7, 0xde, 0xce, 0xc2, 0xc1, 0x88, 0x94, 0x24, 0x9f, 0x73,
	0x26, 0x59, 0xc2, 0xf2, 0x41, 0xa5, 0x0e, 0xb8, 0x9f, 0xb0, 0x62, 0x40, 0xf2, 0x6c, 0x4d, 0xd6,
	0x64, 0xc0, 0xa4, 0xa4, 0x7c, 0x90, 0xa8, 0xdf, 0x9a, 0x74, 0xc2, 0x72, 0xff, 0x2f, 0x04, 0x7b,
	0x73, 0x92, 0x6c, 0xa8, 0xc4, 0x1e, 0x74, 0x0b, 0x72, 0x9b, 0x25, 0xab, 0xb2, 0x2e, 0xd6, 0x94,
	0x7b, 0xa8, 0x8f, 0x8e, 0xac, 0xa0, 0x75, 0xf2, 0x0d, 0xc6, 0xd0, 0xfe, 0x85, 0x72, 0x91, 0xb1,
	0xd2, 0x6b, 0xe9, 0x20, 0x3a, 0xc1, 0x01, 0x98, 0xf2, 0xbe, 0xa2, 0x9e, 0xd1, 0x47, 0x47, 0xbd,
	0xd7, 0x5f, 0x0e, 0x1e, 0xeb, 0x34, 0x68, 0xba, 0xc4, 0xf7, 0x15, 0xc5, 0x63, 0xe8, 0x24, 0xac,
	0xa8, 0x38, 0x15, 0x1a, 0xd3, 0xd4, 0x10, 0xaf, 0x1e, 0x87, 0x18, 0xbd, 0x2b, 0x0a, 0xcc, 0xd9,
	0xe5, 0x2c, 0xc2, 0x5d, 0x30, 0xd7, 0x2c, 0xbd, 0xf7, 0xac, 0x3e, 0x3a, 0xea, 0xfa, 0xdf, 0x81,
	0x33, 0xa6, 0x84, 0xcb, 0x21, 0x25, 0x12, 0x1f, 0x42, 0x4f, 0xd0, 0x32, 0x5d, 0xc9, 0xac, 0xa0,
	0x42, 0x92, 0xa2, 0xd2, 0x84, 0x0c, 0xfc, 0x02, 0xf6, 0x85, 0x24, 0x5c, 0xee, 0x24, 0x14, 0x29,
	0xc3, 0xff, 0x1d, 0x81, 0x33, 0x26, 0x65, 0x2a, 0xee, 0xc8, 0x86, 0xe2, 0x2f, 0xe0, 0x30, 0x61,
	0x45, 0x51, 0x97, 0x59, 0x42, 0x64, 0xc6, 0xca, 0x15, 0x2d, 0x13, 0x96, 0x66, 0xe5, 0xad, 0x86,
	0x71, 0x02, 0xb3, 0x96, 0x37, 0xdf, 0xe2, 0x27, 0x60, 0x09, 0x4a, 0x53, 0xa1, 0x21, 0xba, 0xf8,
	0x02, 0x0e, 0x45, 0x5d, 0x55, 0x8c, 0x4b, 0x9a, 0xae, 0x76, 0x28, 0x0a, 0xcf, 0xe8, 0x1b, 0xff,
	0x9b, 0xa3, 0xff, 0x07, 0x02, 0x18, 0xe5, 0x19, 0x2d, 0x65, 0x58, 0xcb, 0x3b, 0xec, 0x82, 0x5d,
	0x0b, 0xca, 0x4b, 0x52, 0xd0, 0x66, 0x08, 0x15, 0xa9, 0x88, 0x10, 0x6f, 0x19, 0x4f, 0xb7, 0x13,
	0x7c, 0x06, 0x6e, 0x49, 0xe5, 0x8a, 0x53, 0xd2, 0x30, 0x67, 0xb5, 0xd4, 0x16, 0x59, 0x01, 0x3a,
	0xc6, 0x9f, 0xc3, 0x53, 0x95, 0x7c, 0xcb, 0x33, 0x49, 0xff, 0xc9, 0x9a, 0x0f, 0xd9, 0x03, 0xe8,
	0xa4, 0x54, 0xc8, 0xac, 0xd4, 0x7c, 0xb5, 0xa4, 0x0e, 0x7e, 0x0a, 0x4e, 0xa2, 0x27, 0x58, 0x65,
	0xa9, 0xb7, 0xa7, 0x43, 0x3d, 0xd8, 0xbb, 0xc9, 0x72, 0x49, 0xb9, 0xd7, 0xd6, 0xdf, 0xff, 0x21,
	0xa8, 0xad, 0x05, 0xfd, 0x0a, 0x8c, 0x30, 0xd9, 0xe0, 0xe7, 0x00, 0x94, 0x73, 0xc6, 0x57, 0x09,
	0x4b, 0xe9, 0xf6, 0x56, 0xa1, 0x63, 0xfc, 0x1c, 0x9e, 0x34, 0xe1, 0x82, 0x0a, 0x41, 0x6e, 0xa9,
	0x26, 0xe0, 0xf8, 0x11, 0x38, 0x5b, 0xca, 0xc9, 0xe6, 0xc3, 0x91, 0xd0, 0xbf, 0x47, 0x6a, 0x3d,
	0xe8, 0xb0, 0x26, 0x32, 0xb9, 0x53, 0x11, 0x43, 0xf7, 0xfe, 0x1e, 0x8c, 0x45, 0xbd, 0xfe, 0x68,
	0x80, 0x0f, 0x38, 0xf9, 0x6f, 0xc0, 0x5a, 0x96, 0xe2, 0x13, 0x00, 0x7e, 0x43, 0x60, 0x9c, 0x51,
	0xf9, 0xd1, 0xf5, 0x18, 0xe0, 0x86, 0x2a, 0x06, 0x22, 0xfb, 0xb5, 0x59, 0x2a, 0x0b, 0x1f, 0x40,
	0x7b, 0xd7, 0x24, 0x23, 0x68, 0xbd, 0x3a, 0xc1, 0xfb, 0x60, 0xd6, 0x65, 0x26, 0xb5, 0x3d, 0x56,
	0x80, 0x5e, 0xe3, 0x17, 0x60, 0x93, 0x5a, 0xb2, 0x15, 0x49, 0x36, 0xda, 0x20, 0x3b, 0xb0, 0x6e,
	0x48, 0x2e, 0xa8, 0x3f, 0x00, 0xfb, 0xa2, 0x91, 0x56, 0xbc, 0x27, 0x50, 0xb3, 0x06, 0x2e, 0xd8,
	0x5b, 0xe1, 0xd5, 0xe5, 0x35, 0x8e, 0xba, 0xfe, 0x1b, 0x30, 0x4f, 0xeb, 0xa2, 0xc2, 0xfb, 0xd0,
	0xfe, 0x99, 0xd5, 0xbc, 0x24, 0xf9, 0xce, 0x2d, 0x63, 0x22, 0x93, 0x0f, 0xfb, 0x6f, 0xe0, 0x67,
	0xe0, 0xbc, 0x33, 0x5b, 0x0b, 0x1e, 0xa0, 0x63, 0xff, 0x47, 0xe8, 0x35, 0xd6, 0x5d, 0xb1, 0x3c,
	0x5f, 0x93, 0x4f, 0xf1, 0xef, 0xe5, 0xd7, 0xd0, 0xd9, 0xd9, 0x04, 0x6c, 0x83, 0xde, 0x77, 0x17,
	0xa9, 0xd3, 0xf5, 0x74, 0x32, 0x74, 0x5b, 0xea, 0x74, 0x76, 0x3d, 0x99, 0xbb, 0x06, 0x6e, 0x83,
	0x31, 0xbd, 0xfe, 0xc1, 0x35, 0x5f, 0xfe, 0x89, 0x00, 0x76, 0xde, 0x99, 0x27, 0xe0, 0x8c, 0xc3,
	0xd9, 0xe9, 0x62, 0x1c, 0x9e, 0xab, 0x52, 0x0f, 0x9e, 0x8d, 0xa6, 0x93, 0x68, 0x16, 0x87, 0xcb,
	0x78, 0x1c, 0xcd, 0xe2, 0xc9, 0x28, 0x8c, 0x27, 0x97, 0x33, 0xb7, 0xa5, 0x00, 0xc2, 0xd1, 0xb9,
	0xab, 0x54, 0xe9, 0x2e, 0x96, 0xc3, 0xc5, 0xe8, 0x6a, 0x32, 0xd7, 0x29, 0x13, 0x63, 0xe8, 0x2d,
	0x67, 0xef, 0xc5, 0x2c, 0xf5, 0xfb, 0x59, 0x14, 0xbb, 0x7b, 0xb8, 0x0b, 0xf6, 0x45, 0xb4, 0x58,
	0x84, 0x67, 0xd1, 0xc2, 0x6d, 0xab, 0x76, 0x5b, 0xfc, 0xd1, 0xb9, 0x6b, 0xab, 0xe4, 0x62, 0xbc,
	0x8c, 0x4f, 0x2f, 0x7f, 0x9a, 0xb9, 0x8e, 0x9a, 0xf6, 0x74, 0x79, 0x31, 0x77, 0x41, 0x4f, 0x15,
	0x85, 0x57, 0xf1, 0x30, 0x0a, 0x63, 0xb7, 0xa3, 0x1a, 0x34, 0x55, 0x57, 0x97, 0xd3, 0xe9, 0x50,
	0x95, 0x76, 0x87, 0x27, 0xf0, 0xe8, 0xcb, 0x3d, 0xec, 0x34, 0x0f, 0xbe, 0x66, 0x3b, 0x46, 0x7f,
	0x07, 0x00, 0x00, 0xff, 0xff, 0xf2, 0x02, 0x51, 0xcf, 0x00, 0x06, 0x00, 0x00,
}
